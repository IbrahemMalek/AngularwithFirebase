{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/customer-list/customer-list.component.ts","./src/app/customer-list/customer-list.component.html","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/shared/customer.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crudfirebase';\n}\n","<div class=\"container\">\n  <app-customer></app-customer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule, ReactiveFormsModule,\n    AppRoutingModule,AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\ncustomerarray=[];\n  constructor(public custservice:CustomerService) { }\n\n  ngOnInit(): void {\n    this.custservice.getcustomer().subscribe(\n      list=>{\n        this.customerarray=list.map(item=>{\n          return{\n            $key:item.key,\n          ...item.payload.val()\n          };\n        });\n      }\n    );\n  }\nondelete($key){\n  if(confirm(\"are u sure u want to delete this record\")){\n    this.custservice.deletecustomer($key);\n\n  }\n}\n}\n","<table class=\"table table-sm\">\n    <thead>\n        <th>full name</th>\n        <th>email</th>\n        <th>mobile</th>\n        <th></th>\n    </thead>\n    <ng-container *ngFor=\"let customer of customerarray\">\n        <tr class=\"table-dark\">\n            <td>{{customer.fullname}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.mobile}}</td>\n            <td>\n                <button class=\"btn btn-outline-info\" (click)=\"custservice.populateform(customer)\">edit</button>\n                <button class=\"btn btn-outline-danger\" (click)=\"ondelete(customer.$key)\">delete</button>\n            </td>\n        </tr>\n\n    </ng-container>\n\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { CustomerService } from '../shared/customer.service';\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n   \n  constructor( public custservice:CustomerService) { \n    \n  }\n  submitted:boolean;\n  showsuccessmessage:boolean;\n  formcontrols=this.custservice.form.controls;\n  ngOnInit(): void {\n  }\n  onsubmit(){\n    this.submitted=true;\n    if(this.custservice.form.valid){\n    if(this.custservice.form.get('$key').value==null)\n     this.custservice.insertcustomer(this.custservice.form.value);\n    else\n    this.custservice.updatecustomer(this.custservice.form.value);\n    this.showsuccessmessage=true;\n    setTimeout(()=>this.showsuccessmessage=false,10000);\n    this.submitted=false;\n    this.custservice.form.reset();\n  }\n}\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <form [formGroup]=\"this.custservice.form\" (ngSubmit)=\"onsubmit()\">\n            <input type=\"hidden\" formcontrolName=\"$key\">\n            <div class=\"form-group\">\n                <label>Full Name</label>\n                <input  formControlName=\"fullname\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formcontrols.fullname.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\" formcontrols.fullname.errors && submitted\">this field is required</div>\n                <label>Email</label>\n                <input  formControlName=\"email\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formcontrols.email.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formcontrols.email.errors\">this field is required</div>\n                <label>Mobile</label>\n                <input  formControlName=\"mobile\" class=\"form-control\"  [ngClass]=\"{'is-invalid':submitted && formcontrols.mobile.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formcontrols.mobile.errors\">this field is required</div>\n                <label>Location</label>\n                <input  formControlName=\"location\" class=\"form-control\" >\n                \n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n              </div>\n        </form>\n        <div class=\"alert alert-info\"  *ngIf=\"showsuccessmessage\">\n            Submitted successfully.\n          </div>\n    </div>\n    <div class=\"col-md-6\">\n        <app-customer-list></app-customer-list>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport{FormControl,FormGroup ,Validators} from '@angular/forms';\nimport{AngularFireDatabase,AngularFireList} from 'angularfire2/database';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor( public firebase:AngularFireDatabase) { }\n     customerlist:AngularFireList<any>;\n     form = new FormGroup({\n      $key:new FormControl(null),\n      fullname:new FormControl('',Validators.required),\n      email:new FormControl('',Validators.email),\n      mobile:new FormControl('',[Validators.required,Validators.minLength(10)]),\n      location:new FormControl('',Validators.required)\n  \n    });\n\n     getcustomer(){\n       this.customerlist=this.firebase.list('customers');\n       return this.customerlist.snapshotChanges();\n     }\n     insertcustomer(customer){\n       this.customerlist.push({\n        fullname:customer.fullname,\n        email:customer.email,\n        mobile:customer.mobile,\n        location:customer.location\n       });\n     }\n     populateform(customer){\n   this.form.setValue(customer);\n     }\n     updatecustomer(customer){\n       this.customerlist.update(customer.$key,\n        {\n          fullname:customer.fullname,\n          email:customer.email,\n          mobile:customer.mobile,\n          location:customer.location\n         }\n        );\n     }\n     deletecustomer($key:string){\n       this.customerlist.remove($key);\n\n     }\n\n\n \n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyDBCA8GJXi2oN-ncFgQ5wwlBU5MsEBF9MM\",\n    authDomain: \"good-905e2.firebaseapp.com\",\n    databaseURL: \"https://good-905e2.firebaseio.com\",\n    projectId: \"good-905e2\",\n    storageBucket: \"good-905e2.appspot.com\",\n    messagingSenderId: \"161338466461\",\n    appId: \"1:161338466461:web:dc99d5e29b127e706db474\",\n    measurementId: \"G-P8DSZVY42W\"}\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}