{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customer-list/customer-list.component.ts","webpack:///src/app/customer-list/customer-list.component.html","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/shared/customer.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","custservice","CustomerListComponent","customerarray","getcustomer","subscribe","list","map","item","$key","key","payload","val","confirm","deletecustomer","CustomerComponent","formcontrols","form","controls","submitted","valid","get","value","insertcustomer","updatecustomer","showsuccessmessage","setTimeout","reset","onsubmit","CustomerService","firebase","fullname","required","email","mobile","minLength","location","customerlist","snapshotChanges","customer","push","setValue","update","remove","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crudfirebase';\n}\n","<div class=\"container\">\n  <app-customer></app-customer>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { CustomerService } from './shared/customer.service';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule, ReactiveFormsModule,\n    AppRoutingModule,AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireDatabaseModule\n  ],\n  providers: [CustomerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../shared/customer.service';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\ncustomerarray=[];\n  constructor(public custservice:CustomerService) { }\n\n  ngOnInit(): void {\n    this.custservice.getcustomer().subscribe(\n      list=>{\n        this.customerarray=list.map(item=>{\n          return{\n            $key:item.key,\n          ...item.payload.val()\n          };\n        });\n      }\n    );\n  }\nondelete($key){\n  if(confirm(\"are u sure u want to delete this record\")){\n    this.custservice.deletecustomer($key);\n\n  }\n}\n}\n","<table class=\"table table-sm\">\n    <thead>\n        <th>full name</th>\n        <th>email</th>\n        <th>mobile</th>\n        <th></th>\n    </thead>\n    <ng-container *ngFor=\"let customer of customerarray\">\n        <tr class=\"table-dark\">\n            <td>{{customer.fullname}}</td>\n            <td>{{customer.email}}</td>\n            <td>{{customer.mobile}}</td>\n            <td>\n                <button class=\"btn btn-outline-info\" (click)=\"custservice.populateform(customer)\">edit</button>\n                <button class=\"btn btn-outline-danger\" (click)=\"ondelete(customer.$key)\">delete</button>\n            </td>\n        </tr>\n\n    </ng-container>\n\n</table>\n","import { Component, OnInit } from '@angular/core';\n\nimport { CustomerService } from '../shared/customer.service';\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n   \n  constructor( public custservice:CustomerService) { \n    \n  }\n  submitted:boolean;\n  showsuccessmessage:boolean;\n  formcontrols=this.custservice.form.controls;\n  ngOnInit(): void {\n  }\n  onsubmit(){\n    this.submitted=true;\n    if(this.custservice.form.valid){\n    if(this.custservice.form.get('$key').value==null)\n     this.custservice.insertcustomer(this.custservice.form.value);\n    else\n    this.custservice.updatecustomer(this.custservice.form.value);\n    this.showsuccessmessage=true;\n    setTimeout(()=>this.showsuccessmessage=false,10000);\n    this.submitted=false;\n    this.custservice.form.reset();\n  }\n}\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6\">\n        <form [formGroup]=\"this.custservice.form\" (ngSubmit)=\"onsubmit()\">\n            <input type=\"hidden\" formcontrolName=\"$key\">\n            <div class=\"form-group\">\n                <label>Full Name</label>\n                <input  formControlName=\"fullname\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formcontrols.fullname.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\" formcontrols.fullname.errors && submitted\">this field is required</div>\n                <label>Email</label>\n                <input  formControlName=\"email\" class=\"form-control\" [ngClass]=\"{'is-invalid':submitted && formcontrols.email.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formcontrols.email.errors\">this field is required</div>\n                <label>Mobile</label>\n                <input  formControlName=\"mobile\" class=\"form-control\"  [ngClass]=\"{'is-invalid':submitted && formcontrols.mobile.errors}\">\n                <div class=\"invalid-feedback\" *ngIf=\"submitted && formcontrols.mobile.errors\">this field is required</div>\n                <label>Location</label>\n                <input  formControlName=\"location\" class=\"form-control\" >\n                \n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n              </div>\n        </form>\n        <div class=\"alert alert-info\"  *ngIf=\"showsuccessmessage\">\n            Submitted successfully.\n          </div>\n    </div>\n    <div class=\"col-md-6\">\n        <app-customer-list></app-customer-list>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport{FormControl,FormGroup ,Validators} from '@angular/forms';\nimport{AngularFireDatabase,AngularFireList} from 'angularfire2/database';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor( public firebase:AngularFireDatabase) { }\n     customerlist:AngularFireList<any>;\n     form = new FormGroup({\n      $key:new FormControl(null),\n      fullname:new FormControl('',Validators.required),\n      email:new FormControl('',Validators.email),\n      mobile:new FormControl('',[Validators.required,Validators.minLength(10)]),\n      location:new FormControl('',Validators.required)\n  \n    });\n\n     getcustomer(){\n       this.customerlist=this.firebase.list('customers');\n       return this.customerlist.snapshotChanges();\n     }\n     insertcustomer(customer){\n       this.customerlist.push({\n        fullname:customer.fullname,\n        email:customer.email,\n        mobile:customer.mobile,\n        location:customer.location\n       });\n     }\n     populateform(customer){\n   this.form.setValue(customer);\n     }\n     updatecustomer(customer){\n       this.customerlist.update(customer.$key,\n        {\n          fullname:customer.fullname,\n          email:customer.email,\n          mobile:customer.mobile,\n          location:customer.location\n         }\n        );\n     }\n     deletecustomer($key:string){\n       this.customerlist.remove($key);\n\n     }\n\n\n \n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyDBCA8GJXi2oN-ncFgQ5wwlBU5MsEBF9MM\",\n    authDomain: \"good-905e2.firebaseapp.com\",\n    databaseURL: \"https://good-905e2.firebaseio.com\",\n    projectId: \"good-905e2\",\n    storageBucket: \"good-905e2.appspot.com\",\n    messagingSenderId: \"161338466461\",\n    appId: \"1:161338466461:web:dc99d5e29b127e706db474\",\n    measurementId: \"G-P8DSZVY42W\"}\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}